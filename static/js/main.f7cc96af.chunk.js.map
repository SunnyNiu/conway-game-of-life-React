{"version":3,"sources":["style/gameOfLive-styles.jsx","components/GameRulesAndDescription.jsx","components/GameText.jsx","components/Cell.js","components/Grid.js","style/board-styles.jsx","isOutOfBounds.js","getNeighbours.js","indicesAreOutOfBounds.js","utility.js","redux/action.js","components/GameBody.jsx","nextCellState.js","countAliveNeighbours.js","isOverPopulated.js","isUnderPopulated.js","isRessurectable.js","components/App.js","redux/reducer.js","index.js"],"names":["styled","section","div","props","columns","value","h1","Title","h2","Paragraph","p","BorderParagraph","Format","Button","button","Speed","DropdownType","Dropdown","Input","input","GameRulesAndDes","label","href","React","Component","GameText","Cell","width","height","left","top","center","propTypes","PropTypes","number","oneOfType","string","bool","frGetter","Grid","flow","minRowHeight","rows","gap","columnGap","rowGap","CellStyle","isOutOfBounds","index","array","length","getNeighbours","cellRow","cellColumn","board","filter","columnIndex","x","y","map","createMatrix","size","matrix","i","arr","j","push","newBoard","type","payload","setStartOrStop","status","setSelectedType","setSpeed","speed","options","GameBody","handleCellClick","Math","floor","dispatch","handleNext","cellState","neighbourCount","nextBoard","allAliveNeighbours","isOverPopulated","isUnderPopulated","isRessurectable","handleStart","startOrStop","intervalID","setInterval","clearInterval","clearBoard","gliderGame","smallExploder","exploder","tenCellRow","lightweight","tumbler","changeHandle","e","speedChange","debounce","this","reduce","acc","item","concat","onClick","key","className","onChange","selected","id","min","max","step","target","title","connect","state","App","INITIAL_STATE","gameReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7cc96af.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport Dropdown from 'react-dropdown'\n\nexport const GameOfLive = styled.section`\n  text-align: center;\n`;\n\nexport const BoardStyle = styled.div`\n  display: grid;\n  grid-template-columns: ${props => props.columns};\n  background-color: black;\n  padding: 10px;\n  flex-direction: column;\n`;\n\nexport const CellStyle = styled.div`\n  background-color: ${props => (props.value ? \"green\" : \"pink\")};\n  border: 1px solid rgba(0, 0, 0, 0.8);\n  padding: 8px;\n  font-size: 8px;\n  text-align: center;\n`;\n\nexport const GameTitle = styled.h1`\n  font-size: 2.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nexport const HeaderWrapper = styled.section`\n  padding: 2em;\n  background: papayawhip;\n`;\n\nexport const BoardBody = styled.div`\n  background-color: #ffffff;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n`\n\nexport const Title = styled.h2`\n  text-align: left;\n  color: palevioletred;\n  background-color: #ffffff;\n`;\n\nexport const Paragraph = styled.p`\n  text-align: left;\n  color: palevioletred;\n  background-color: #ffffff;\n`\n\nexport const BorderParagraph = styled(Paragraph)`\n  font-weight: bold;\n`\n\nexport const Body = styled.div`\n  text-align: center;\n  background-color: #ffffff;\n`\n\nexport const Format = styled.div`\n  text-align: center;\n  background-color: #ffffff;\n`\nexport const Gutter = styled(Format)`\n  color: palevioletred;\n`\nexport const Content = styled(Format)`\n  color: palevioletred;\n  grid-template-columns: 1fr 5fr 1fr;\n  display: grid;\n  flex-direction: column;\n`\n\nexport const Button = styled.button`\n  display: inline;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\nexport const Speed = styled.button`\n  display: inline;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  border: 2px none palevioletred;\n  border-radius: 3px;\n`;\n\nexport const DropdownType = styled(Dropdown)`\n  margin: 0.5em;\n`\nexport const Input = styled.input`\n  margin: 2em;\n`\nexport const Label = styled.label`\n  margin-top: 10px;\n  padding: 10px\n`","import React from 'react'\nimport {Title, Paragraph, BorderParagraph} from '../style/gameOfLive-styles'\n\nclass GameRulesAndDes extends React.Component{\n  render () {\n    return (\n      <>\n      <Title>The Rules</Title>\n      <BorderParagraph>For a space that is 'populated':</BorderParagraph>\n      <Paragraph>\n       {\" \"} Each cell with one or no neighbors dies, as if by solitude.\n      </Paragraph>\n      <Paragraph>\n       {\" \"} Each cell with four or more neighbors dies, as if by overpopulation.\n      </Paragraph>\n      <Paragraph>\n       {\" \"} Each cell with two or three neighbors survives.\n      </Paragraph>\n\n      <BorderParagraph>For a space that is 'empty' or 'unpopulated'</BorderParagraph>\n      <Paragraph>\n       {\" \"} Each cell with three neighbors becomes populated.\n      </Paragraph>\n\n      <Title>The Controls</Title>\n      <Paragraph>\n      Choose a figure from the pull-down menu or make one yourself by clicking on the cells with a mouse. \n      A new generation of cells (corresponding to one iteration of the rules) is initiated by the 'Next' \n      button. The 'Start' button advances the game by several generations. Game speed is regulated by the speed dial and the size of the cells with the size dial.\n      </Paragraph>\n      <Title>Development</Title>\n      <Paragraph>Developer: Sunny Niu. Just for learning and demo, which is resemble <a href='https://bitstorm.org/gameoflife/'>https://bitstorm.org/gameoflife/</a></Paragraph>\n      </>\n    )\n  }\n}\n\nexport default GameRulesAndDes","import React from 'react'\nimport {Title, Paragraph} from '../style/gameOfLive-styles'\n\nclass GameText extends React.Component{\n  render () {\n    return (\n      <>\n      <Title>The Game</Title>\n      <Paragraph>\n      The Game of Life is not your typical computer game. It is a 'cellular automaton', and was invented by Cambridge mathematician John Conway.\n\n      This game became widely known when it was mentioned in an article published by Scientific American in 1970. It consists of a collection of cells which, based on a few mathematical rules, can live, die or multiply. Depending on the initial conditions, the cells form various patterns throughout the course of the game.\n      </Paragraph>\n      <Title>The Simulation</Title>\n      </>\n    )\n  }\n}\n\nexport default GameText","import styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Cell = styled.div`\n  height : 100%;\n  min-width: 0;\n  grid-column-end: ${({width = 1}) => `span ${width}`};\n  grid-row-end: ${({height = 1}) => `span ${height}`}\n\n  ${({left}) => left && `grid-column-start: ${left}`}\n  ${({top}) => top && `grid-row-start: ${top}`}\n\n  ${({center}) => center && `text-align: center`}\n\n`\nCell.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  top: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  left: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  center: PropTypes.bool\n}\nexport default Cell;","import styled from \"styled-components\"\nimport PropTypes from 'prop-types'\n\nconst autoRows = ({ minRowHeight = \"20px\" }) => `minmax(${minRowHeight}, auto)`;\nconst frGetter = value => typeof value === 'number' ? `repeat(${value}, 1fr)` : value;\nconst gap = ({gap = '8px'}) => gap;\n\nconst Grid = styled.div`\n  display: grid;\n  height: ${({ height = \"auto\" }) => height};\n  grid-auto-flow: ${({flow = 'row'}) => flow};\n  grid-auto-rows: ${autoRows};\n  ${({ rows }) => rows && `grid-template-rows: ${frGetter(rows)}`};\n  grid-template-columns: ${({ columns = 12 }) => frGetter(columns)};\n  grid-gap: ${gap};\n  ${({ columnGap }) => columnGap && `column-gap: ${columnGap}`};\n  ${({ rowGap }) => rowGap && `row-gap: ${rowGap}`};\n`;\n\nGrid.propTypes = {\n  columns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  gap: PropTypes.string,\n  columnGap: PropTypes.string,\n  rowGap: PropTypes.string,\n  height: PropTypes.string,\n  minRowHeight: PropTypes.string,\n  flow: PropTypes.string,\n  rows: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default Grid;","import styled from \"styled-components\";\n\nexport const BoardStyle = styled.div`\n  display: grid;\n  grid-template-columns: ${props => props.columns};\n  background-color: black;\n  padding: 10px;\n  flex-direction: column;\n`;\n\nexport const CellStyle = styled.div`\n  background-color: ${props => (props.value ? \"green\" : \"pink\")};\n  border: 1px solid rgba(0, 0, 0, 0.8);\n  padding: 8px;\n  font-size: 8px;\n  text-align: center;\n`;\n","export function isOutOfBounds(index, array) {\n  const length = array.length;\n  if (index >= length || index < 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","import { indicesAreOutOfBounds } from \"./indicesAreOutOfBounds\";\n\nexport function getNeighbours(cellRow, cellColumn, board) {\n  const allNeighbourPositions = [\n    [cellRow - 1, cellColumn - 1],\n    [cellRow - 1, cellColumn],\n    [cellRow - 1, cellColumn + 1],\n    [cellRow, cellColumn - 1],\n    [cellRow, cellColumn + 1],\n    [cellRow + 1, cellColumn - 1],\n    [cellRow + 1, cellColumn],\n    [cellRow + 1, cellColumn + 1]\n  ];\n\n  return allNeighbourPositions\n    .filter(([x, y]) => !indicesAreOutOfBounds(x, y, board))\n    .map(([x, y]) => board[x][y]);\n}\n","import { isOutOfBounds } from \"./isOutOfBounds\";\n\nexport function indicesAreOutOfBounds(rowIndex, columnIndex, array) {\n  return isOutOfBounds(rowIndex, array) || isOutOfBounds(columnIndex, array);\n}\n","function createMatrix(size) {\n  const matrix = [];\n  for (let i = 0; i < size; i++) {\n    const arr = [];\n    for (let j = 0; j < size; j++) {\n      arr.push(false);\n    }\n    matrix.push(arr);\n  }\n  return matrix;\n};\n\nexport default createMatrix","export const newBoard = (newBoard) =>({\n  type:'SET_NEW_BOARD',\n  payload:newBoard\n})\n\nexport const setStartOrStop = (status) =>({\n  type:'SET_START_OR_STOP',\n  payload:status\n})\n\nexport const setSelectedType = (type) =>({\n  type:'SET_SELECTED_TYPE',\n  payload:type\n})\n\nexport const setSpeed = (speed) =>({\n  type:'SET_SPEED',\n  payload:speed\n})","import React from \"react\";\nimport { CellStyle } from \"../style/board-styles\";\nimport { nextCellState } from \"../nextCellState\";\nimport { countAliveNeighbours } from \"../countAliveNeighbours\";\nimport Cell from './Cell';\nimport Grid from './Grid'\nimport 'react-dropdown/style.css'\nimport {Button, DropdownType, Input, Speed} from '../style/gameOfLive-styles'\nimport createMatrix from '../utility'\nimport {newBoard, setStartOrStop, setSelectedType, setSpeed} from '../redux/action'\nimport { connect } from 'react-redux'\nimport debounce from 'lodash/debounce'\n\nconst options = [\n  'Glider', 'Small-Exploder', 'Exploder', '10-Cell-Row', 'Lightweight-spaceship', 'Tumbler', 'Gosper-Glider Gun'\n]\nclass GameBody extends React.Component {\n    constructor() {\n    super();\n    this.speedChange = debounce(this.speedChange, 300);\n  }\n\n  handleCellClick = (index) => {\n    const { size, matrix } = this.props;\n    const x = Math.floor(index / size);\n    const y = index % size;\n    const board = createMatrix(size);\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (i === x && j === y) {\n          board[i][j] = !matrix[i][j];\n        } else {\n          board[i][j] = matrix[i][j];\n        }\n      }\n    }\n    this.props.dispatch(newBoard(board))\n  }\n\n  handleNext = () =>{\n    const { matrix } = this.props;\n\n    const nextBoard = createMatrix(matrix.length);\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        const allAliveNeighbours = countAliveNeighbours(i, j, matrix);\n        nextBoard[i][j] = nextCellState(matrix[i][j], allAliveNeighbours);\n      }\n    }\n    this.props.dispatch(newBoard(nextBoard))\n  }\n\n  handleStart = () =>{\n    const status = this.props.startOrStop\n    if(status === 'Start'){\n      this.props.dispatch(setStartOrStop('Stop'))\n\n      this.intervalID = setInterval(\n        () => this.handleNext(),\n        this.props.speed * 1000\n      )\n    }else if(status === 'Stop'){\n      this.props.dispatch(setStartOrStop('Start'))\n      clearInterval(this.intervalID)\n    }\n  }\n\n  clearBoard = () => {\n    const { matrix } = this.props;\n    const nextBoard = createMatrix(matrix.length);\n    this.props.dispatch(newBoard(nextBoard))\n  }\n\n  gliderGame = () =>{\n    const matrix = createMatrix(40)\n    const [x1, y1] = [20, 23] \n    const [x2, y2] = [21, 24]\n    const [x3, y3] = [22, 22]\n    const [x4, y4] = [22, 23]\n    const [x5, y5] = [22, 24]\n    const board = createMatrix(40);\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if ((i === x1 && j === y1) || (i === x2 && j === y2) || (i === x3 && j === y3) || (i === x4 && j === y4) || (i === x5 && j === y5)) {\n          board[i][j] = !matrix[i][j];\n        } else {\n          board[i][j] = matrix[i][j];\n        }\n      }\n    }\n    this.props.dispatch(newBoard(board))\n  }\n\n  smallExploder = () => {\n    const matrix = createMatrix(40)\n\n    const [x1, y1] = [18, 18] \n    const [x2, y2] = [19, 17]\n    const [x3, y3] = [19, 18]\n    const [x4, y4] = [19, 19]\n    const [x5, y5] = [20, 17]\n    const [x6, y6] = [20, 19]\n    const [x7, y7] = [21, 18]\n    const board = createMatrix(40);\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if ((i === x1 && j === y1) || \n        (i === x2 && j === y2) || \n        (i === x3 && j === y3) || \n        (i === x4 && j === y4) || \n        (i === x5 && j === y5) ||\n        (i === x6 && j === y6) ||\n        (i === x7 && j === y7) ) {\n          board[i][j] = !matrix[i][j];\n        } else {\n          board[i][j] = matrix[i][j];\n        }\n      }\n    }\n    this.props.dispatch(newBoard(board))\n  }\n\n  exploder = () =>{\n    const matrix = createMatrix(40)\n    const [x1, y1] = [17, 17] \n    const [x2, y2] = [17, 19]\n    const [x3, y3] = [17, 21]\n    const [x4, y4] = [18, 17]\n    const [x5, y5] = [18, 21]\n    const [x6, y6] = [19, 17]\n    const [x7, y7] = [19, 21]\n    const [x8, y8] = [20, 17]\n    const [x9, y9] = [20, 21]\n    const [x10, y10] = [21, 17]\n    const [x11, y11] = [21, 19]\n    const [x12, y12] = [21, 21]\n    const board = createMatrix(40);\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if ((i === x1 && j === y1) || \n        (i === x2 && j === y2) || \n        (i === x3 && j === y3) || \n        (i === x4 && j === y4) || \n        (i === x5 && j === y5) ||\n        (i === x6 && j === y6) ||\n        (i === x7 && j === y7) ||\n        (i === x8 && j === y8) ||\n        (i === x9 && j === y9) ||\n        (i === x10 && j === y10) ||\n        (i === x11 && j === y11) ||\n        (i === x12 && j === y12) ) {\n          board[i][j] = !matrix[i][j];\n        } else {\n          board[i][j] = matrix[i][j];\n        }\n      }\n    }\n    this.props.dispatch(newBoard(board))\n  }\n\n  tenCellRow = () =>{\n    const matrix = createMatrix(40)\n    const [x1, y1] = [15, 15] \n    const [x2, y2] = [15, 16]\n    const [x3, y3] = [15, 17]\n    const [x4, y4] = [15, 18]\n    const [x5, y5] = [15, 19]\n    const [x6, y6] = [15, 20]\n    const [x7, y7] = [15, 21]\n    const [x8, y8] = [15, 22]\n    const [x9, y9] = [15, 23]\n    const [x10, y10] = [15, 24]\n    const board = createMatrix(40);\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if ((i === x1 && j === y1) || \n        (i === x2 && j === y2) || \n        (i === x3 && j === y3) || \n        (i === x4 && j === y4) || \n        (i === x5 && j === y5) ||\n        (i === x6 && j === y6) ||\n        (i === x7 && j === y7) ||\n        (i === x8 && j === y8) ||\n        (i === x9 && j === y9) ||\n        (i === x10 && j === y10) ) {\n          board[i][j] = !matrix[i][j];\n        } else {\n          board[i][j] = matrix[i][j];\n        }\n      }\n    }\n    this.props.dispatch(newBoard(board))\n  }\n\n  lightweight = () => {\n    const matrix = createMatrix(40)\n    const [x1, y1] = [17, 17] \n    const [x2, y2] = [17, 18]\n    const [x3, y3] = [17, 19]\n    const [x4, y4] = [17, 20]\n    const [x5, y5] = [18, 16]\n    const [x6, y6] = [18, 20]\n    const [x7, y7] = [19, 20]\n    const [x8, y8] = [20, 16]\n    const [x9, y9] = [20, 19]\n    const board = createMatrix(40);\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if ((i === x1 && j === y1) || \n        (i === x2 && j === y2) || \n        (i === x3 && j === y3) || \n        (i === x4 && j === y4) || \n        (i === x5 && j === y5) ||\n        (i === x6 && j === y6) ||\n        (i === x7 && j === y7) ||\n        (i === x8 && j === y8) ||\n        (i === x9 && j === y9) ) {\n          board[i][j] = !matrix[i][j];\n        } else {\n          board[i][j] = matrix[i][j];\n        }\n      }\n    }\n    this.props.dispatch(newBoard(board))\n  }\n\n\n  tumbler = () =>{ \n    const matrix = createMatrix(40)\n    const [x1, y1] = [15, 16] \n    const [x2, y2] = [15, 17]\n    const [x3, y3] = [15, 19]\n    const [x4, y4] = [15, 20]\n    const [x5, y5] = [16, 16]\n    const [x6, y6] = [16, 17]\n    const [x7, y7] = [16, 19]\n    const [x8, y8] = [16, 20]\n    const [x9, y9] = [17, 17]\n    const [x10, y10] = [17, 19] \n    const [x11, y11] = [18, 15]\n    const [x12, y12] = [18, 17]\n    const [x13, y13] = [18, 19]\n    const [x14, y14] = [18, 21]\n    const [x15, y15] = [19, 15]\n    const [x16, y16] = [19, 17]\n    const [x17, y17] = [19, 19]\n    const [x18, y18] = [19, 21]\n    const [x19, y19] = [20, 15]\n    const [x20, y20] = [20, 16]\n    const [x21, y21] = [20, 20]\n    const [x22, y22] = [20, 21]\n    const board = createMatrix(40);\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if ((i === x1 && j === y1) || \n        (i === x2 && j === y2) || \n        (i === x3 && j === y3) || \n        (i === x4 && j === y4) || \n        (i === x5 && j === y5) ||\n        (i === x6 && j === y6) ||\n        (i === x7 && j === y7) ||\n        (i === x8 && j === y8) ||\n        (i === x9 && j === y9) ||\n        (i === x10 && j === y10) ||\n        (i === x11 && j === y11) ||\n        (i === x12 && j === y12) ||\n        (i === x13 && j === y13) ||\n        (i === x14 && j === y14) ||\n        (i === x15 && j === y15) ||\n        (i === x16 && j === y16) ||\n        (i === x17 && j === y17) ||\n        (i === x18 && j === y18) ||\n        (i === x19 && j === y19) ||\n        (i === x20 && j === y20) ||\n        (i === x21 && j === y21) ||\n        (i === x22 && j === y22)) {\n          board[i][j] = !matrix[i][j];\n        } else {\n          board[i][j] = matrix[i][j];\n        }\n      }\n    }\n    this.props.dispatch(newBoard(board))\n  }\n  changeHandle = (e) => {\n    this.props.dispatch(setSelectedType(e.value))\n    switch(e.value){\n      case 'Glider':\n        this.gliderGame()\n        break\n      case 'Small-Exploder':\n        this.smallExploder()\n        break\n      case 'Exploder':\n        this.exploder()\n        break\n      case '10-Cell-Row':\n        this.tenCellRow()\n        break\n      case 'Lightweight-spaceship':\n        this.lightweight()\n        break \n      case 'Tumbler':\n        this.tumbler()\n        break    \n      default:\n        return    \n    }\n  }\n\n  speedChange = (value) =>{\n    this.props.dispatch(setSpeed(value))\n    clearInterval(this.intervalID)\n    this.intervalID = setInterval(\n      () => this.handleNext(),\n      1000 / this.props.speed\n    )\n  }\n\n  render(){\n    let columns = \"\";\n    for (let i = 0; i < this.props.size; i++) {\n      columns += \"auto \";\n    }\n    return (\n      <>\n      <Grid gap=\"0\" columns={columns}>\n            {this.props.matrix\n              .reduce((acc, item) => acc.concat(item), [])\n              .map((item, index) => (\n                <CellStyle\n                  onClick={() => this.handleCellClick(index)}\n                  key={index}\n                  value={item}\n                >\n                  {\" \"}\n                </CellStyle>\n              ))}\n          </Grid>\n          <Grid >   \n            <Cell>    \n            <DropdownType className=\"\" options={options} onChange={this.changeHandle} value={this.props.selected} />\n            </Cell>\n            <Cell> \n            <Button onClick={this.handleNext}>Next</Button>\n            </Cell>\n            <Cell> \n            <Button onClick={this.handleStart}>{this.props.startOrStop}</Button>\n            </Cell>\n            <Cell> \n            <Button onClick={this.clearBoard}>Clear</Button>\n            </Cell>\n            <Cell> \n             <Speed>Speed:</Speed>\n            </Cell>\n            <Cell> \n            <Input id=\"speed\" type=\"range\" min=\"1\" max=\"10\" step=\"1\" value={this.props.speed} onChange={e => this.speedChange(e.target.value)}  title=\"speed dial\"/>\n            </Cell>\n          </Grid>\n          </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    matrix: state.matrix,\n    size: state.size,\n    selected: state.selected,\n    startOrStop: state.startOrStop,\n    speed: state.speed\n  }\n}\nexport default connect(mapStateToProps)(GameBody)\n","import { isOverPopulated } from \"./isOverPopulated\";\nimport { isUnderPopulated } from \"./isUnderPopulated\";\nimport { isRessurectable } from \"./isRessurectable\";\n\nexport function nextCellState(cellState, neighbourCount) {\n  if (cellState) {\n    return !(\n      isOverPopulated(neighbourCount) || isUnderPopulated(neighbourCount)\n    );\n  }\n  return isRessurectable(neighbourCount);\n}\n","import { getNeighbours } from \"./getNeighbours\";\n\nexport function countAliveNeighbours(cellRow, cellColumn, board) {\n  const allNeighbours = getNeighbours(cellRow, cellColumn, board);\n  return allNeighbours.filter(value => value === true).length;\n}\n","export function isOverPopulated(neighbourCount) {\n  if (neighbourCount > 3) return true;\n  return false;\n}\n","export function isUnderPopulated(neighbourCount) {\n  if (neighbourCount < 2) return true;\n  return false;\n}\n","export function isRessurectable(neighbourCount) {\n  if (neighbourCount === 3) return true;\n  return false;\n}\n","import React from \"react\";\nimport GameRulesAndDes from './GameRulesAndDescription'\nimport GameText from './GameText'\nimport Cell from './Cell';\nimport Grid from './Grid'\nimport 'react-dropdown/style.css'\nimport GameBody from './GameBody'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n\n  componentWillUnmount () {\n    clearInterval(this.intervalID)\n  }\n\n  render() {\n\n    return (\n      <Grid\n      columns =\"100px 1fr 100px\"\n      rows= {\"minmax(45px, auto) 1fr minmax(45px, auto)\"}\n      >\n        <Cell width ={3} center>\n        <h1>The Game of Life</h1>\n        </Cell>\n        <Cell></Cell>\n        <Cell center>\n          <GameText/>\n          <GameBody/> \n          <GameRulesAndDes/>\n        </Cell>\n        <Cell>{\"    \"}</Cell>\n        <Cell width={3}>\n          </Cell>  \n      </Grid>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    matrix: state.matrix,\n    size: state.size,\n    selected: state.selected,\n    startOrStop: state.startOrStop,\n    speed: state.speed\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);\n","import createMatrix from '../utility'\nconst INITIAL_STATE = {\n  matrix: createMatrix(40),\n  size: 40,\n  selected: '',\n  startOrStop: 'Start',\n  speed: 1\n}\n\nconst gameReducer = (state=INITIAL_STATE, action) =>{\n  switch (action.type){\n    case 'SET_NEW_BOARD':{\n      return {...state, matrix:action.payload}\n    }\n    case 'SET_START_OR_STOP':{\n      return {...state, startOrStop:action.payload}\n    }\n    case 'SET_SELECTED_TYPE':{\n      return {...state, selected:action.payload}\n    } \n    case 'SET_SPEED':{\n      return {...state, speed:action.payload}\n    }\n    default:\n      return state\n  }\n\n}\n\nexport default gameReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport gameReducer from './redux/reducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  gameReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}